{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder (9)\\\\Diabetic-Retinopathy-Detection-main\\\\Final Hosted Web\\\\DockerRepo-RP-main\\\\src\\\\views\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, CardFooter, CardTitle, FormGroup, Form, Input, Row, Col, Table } from \"reactstrap\";\nimport { collection, addDoc, getDoc, doc, updateDoc, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const [mobileNo, setMobileNo] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [identityCardNo, setIdentityCardNo] = useState('');\n  const [dob, setDob] = useState('');\n  const [gender, setGender] = useState('');\n  const [district, setDistrict] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [email, setEmail] = useState(null);\n  const resultRef = collection(db, \"patientDetails\");\n  const history = useNavigate();\n  const [showAddPatientCard, setShowAddPatientCard] = useState(false);\n  const [paientData, setPatientData] = useState([]);\n  const handleDateChange = e => {\n    // Get the date from the input\n    const selectedDate = new Date(e.target.value);\n\n    // Convert the date to the desired format (YYYY-MM-DD)\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n\n    // Set the formatted date in state\n    setDob(formattedDate);\n  };\n  const handleMobileNoChange = e => {\n    const input = e.target.value.replace(/\\D/g, ''); // Allow only numeric digits\n    setMobileNo(input.slice(0, 10)); // Limit to 10 characters\n  };\n  //   const isMobileNoValid = mobileNo.length === 10 && /^\\d+$/.test(mobileNo);\n  const isMobileNoValid = value => {\n    return /^\\d{10}$/.test(value); // Checks if the value has exactly 10 digits\n  };\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const isFormValid = () => {\n    return isMobileNoValid(mobileNo) && fullName && identityCardNo && dob && gender && (email ? /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) : true);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const patientDetails = {\n      mobileNo,\n      fullName,\n      identityCardNo,\n      dob,\n      gender,\n      district,\n      address,\n      email\n    };\n    try {\n      await addDoc(resultRef, patientDetails);\n      console.log(\"Data submitted to Firebase successfully\");\n      history(\"/\");\n    } catch (error) {\n      console.error(\"Error submitting data to Firebase:\", error);\n    }\n    // You can do something with the patientDetails data here, like sending it to an API\n    console.log(patientDetails);\n  };\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"patientDetails\"));\n        if (!querySnapshot.empty) {\n          const patientData1 = [];\n          querySnapshot.forEach(doc => {\n            const patient = doc.data();\n            patientData1.push({\n              id: doc.id,\n              fullName: patient.fullName,\n              mobileNo: patient.mobileNo,\n              identityCardNo: patient.identityCardNo,\n              dob: patient.dob,\n              email: patient.email,\n              gender: patient.gender\n            });\n            setPatientData(patientData1);\n            console.log(patientData1);\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n      }\n    };\n    fetchPatients();\n  }, []);\n  const scrollToElement = elementId => {\n    const element = document.getElementById(elementId);\n    setShowAddPatientCard(!showAddPatientCard);\n    if (element) {\n      console.log(\"Scrolling to element:\", element);\n      element.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    } else {\n      console.log(\"Element not found with ID:\", elementId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \" w-50\",\n                tag: \"h4\",\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"update  w-50 d-flex justify-content-end \",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-round \",\n                  color: \"primary\",\n                  type: \"submit\",\n                  onClick: () => {\n                    scrollToElement(\"add-patient-card\"); // Replace \"yourElementId\" with the actual ID of the element you want to scroll to.\n                  },\n                  children: \"Add new Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"text-primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"NIC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Telephone Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Gender\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DOB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: paientData.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient.fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient.identityCardNo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient.mobileNo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient.gender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient.dob\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this)]\n                  }, patient.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: showAddPatientCard && /*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-user\",\n            id: \"add-patient-card\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"Add patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Full Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Name\",\n                        type: \"text\",\n                        value: fullName,\n                        onChange: e => setFullName(e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Telephone\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Telephone\",\n                        value: mobileNo,\n                        maxLength: 10,\n                        onChange: e => setMobileNo(e.target.value),\n                        required: true,\n                        error: !isMobileNoValid,\n                        helperText: !isMobileNoValid && 'Mobile No should be 10 numeric characters'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pl-1\",\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"NIC\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"NIC\",\n                        value: identityCardNo,\n                        onChange: e => setIdentityCardNo(e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Home Address\",\n                        type: \"text\",\n                        value: address,\n                        onChange: e => setAddress(e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Date of Birth\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        defaultValue: \"Melbourne\",\n                        placeholder: \"Date of Birth\",\n                        type: \"date\",\n                        value: dob,\n                        required: true,\n                        onChange: e => setDob(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"px-1\",\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Gender\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        style: {\n                          height: 33\n                        },\n                        placeholder: \"Gender\",\n                        value: gender,\n                        type: \"select\",\n                        onChange: e => setGender(e.target.value),\n                        children: [\"    \", /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select Gender\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"male\",\n                          children: \"Male\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"female\",\n                          children: \"Female\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pl-1\",\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Email (if available)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Email\",\n                        type: \"email\",\n                        value: email || '',\n                        onChange: handleEmailChange,\n                        error: email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email),\n                        helperText: email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) && 'Invalid email format'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"update ml-auto mr-auto\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"btn-round\",\n                      color: \"primary\",\n                      type: \"submit\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(User, \"qrUIfbZz8GmQwd/82tr+TOhZCJw=\", false, function () {\n  return [useNavigate];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","CardHeader","CardBody","CardFooter","CardTitle","FormGroup","Form","Input","Row","Col","Table","collection","addDoc","getDoc","doc","updateDoc","getDocs","db","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s","mobileNo","setMobileNo","fullName","setFullName","identityCardNo","setIdentityCardNo","dob","setDob","gender","setGender","district","setDistrict","address","setAddress","email","setEmail","resultRef","history","showAddPatientCard","setShowAddPatientCard","paientData","setPatientData","handleDateChange","e","selectedDate","Date","target","value","formattedDate","toISOString","split","handleMobileNoChange","input","replace","slice","isMobileNoValid","test","handleEmailChange","isFormValid","handleSubmit","preventDefault","patientDetails","console","log","error","fetchPatients","querySnapshot","empty","patientData1","forEach","patient","data","push","id","scrollToElement","elementId","element","document","getElementById","scrollIntoView","behavior","children","className","md","tag","fileName","_jsxFileName","lineNumber","columnNumber","color","type","onClick","responsive","map","onSubmit","placeholder","onChange","required","maxLength","helperText","defaultValue","style","height","_c","$RefreshReg$"],"sources":["C:/New folder (9)/Diabetic-Retinopathy-Detection-main/Final Hosted Web/DockerRepo-RP-main/src/views/User.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n  Table\n} from \"reactstrap\";\nimport { collection, addDoc, getDoc, doc, updateDoc,getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig.js\";\nimport { useNavigate} from \"react-router-dom\";\n\nfunction User() {\n  const [mobileNo, setMobileNo] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [identityCardNo, setIdentityCardNo] = useState('');\n  const [dob, setDob] = useState('');\n  const [gender, setGender] = useState('');\n  const [district, setDistrict] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [email, setEmail] = useState(null);\n  const resultRef = collection(db, \"patientDetails\");\n  const history = useNavigate();\n  const [showAddPatientCard, setShowAddPatientCard] = useState(false);\n\n\n  const [paientData, setPatientData] = useState([]);\n\n  const handleDateChange = (e) => {\n    // Get the date from the input\n    const selectedDate = new Date(e.target.value);\n    \n    // Convert the date to the desired format (YYYY-MM-DD)\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    \n    // Set the formatted date in state\n    setDob(formattedDate);\n  };\n\n  const handleMobileNoChange = (e) => {\n    const input = e.target.value.replace(/\\D/g, ''); // Allow only numeric digits\n    setMobileNo(input.slice(0, 10)); // Limit to 10 characters\n  };\n//   const isMobileNoValid = mobileNo.length === 10 && /^\\d+$/.test(mobileNo);\nconst isMobileNoValid = (value) => {\n    return /^\\d{10}$/.test(value); // Checks if the value has exactly 10 digits\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  \n  const isFormValid = () => {\n    return (\n      isMobileNoValid(mobileNo) &&\n      fullName &&\n      identityCardNo &&\n      dob &&\n      gender &&\n      (email ? /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) : true)\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const patientDetails = {\n      mobileNo,\n      fullName,\n      identityCardNo,\n      dob,\n      gender,\n      district,\n      address,\n      email,\n    };\n\n    try {\n        await addDoc(resultRef, patientDetails);\n        console.log(\"Data submitted to Firebase successfully\");\n        history(\"/\");\n      } catch (error) {\n        console.error(\"Error submitting data to Firebase:\", error);\n        \n      }\n    // You can do something with the patientDetails data here, like sending it to an API\n    console.log(patientDetails);\n  };\n\n\n\n\n\n  useEffect(()=>{\n    const fetchPatients = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"patientDetails\"));\n        if (!querySnapshot.empty) {\n          const patientData1 = [];\n          querySnapshot.forEach((doc) => {\n            \n            const patient = doc.data();\n           patientData1.push({\n            id: doc.id,\n            fullName: patient.fullName,\n            mobileNo: patient.mobileNo,\n            identityCardNo: patient.identityCardNo,\n            dob: patient.dob,\n            email :patient.email,\n            gender :patient.gender,\n           })\n           setPatientData(patientData1);\n            console.log(patientData1);\n\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n      }\n    };\n    fetchPatients();\n  },[]);\n\n  const scrollToElement = (elementId) => {\n    const element = document.getElementById(elementId);\n    setShowAddPatientCard(!showAddPatientCard)\n    if (element) {\n      console.log(\"Scrolling to element:\", element);\n\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }else{\n      console.log(\"Element not found with ID:\", elementId);\n\n    }\n  };\n\n\n  return (\n    <>\n      <div className=\"content\">\n      <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader className='row'>\n                <CardTitle className=' w-50' tag=\"h4\">Users\n                \n                </CardTitle>\n               \n                    <div className=\"update  w-50 d-flex justify-content-end \">\n                      <Button\n                        className=\"btn-round \"\n                        color=\"primary\"\n                        type=\"submit\"\n                        onClick={() => {\n                          \n                          scrollToElement(\"add-patient-card\"); // Replace \"yourElementId\" with the actual ID of the element you want to scroll to.\n                        }}\n                      >\n                        Add new Patient\n                      </Button>\n                    </div>\n                 \n              </CardHeader>\n              <CardBody>\n                <Table responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>NIC</th>\n                      <th>Telephone Number</th>\n                      <th>Gender</th>\n                      <th>Email</th>\n                      <th>DOB</th>                      \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {paientData.map((patient) => (\n                    <tr key={patient.id}>\n                      <td>{patient.fullName}</td>\n                      <td>{patient.identityCardNo}</td>\n                      <td>{patient.mobileNo}</td>\n                      <td >{patient.gender}</td>\n                      <td >{patient.email}</td>\n                      <td >{patient.dob}</td>\n                    </tr>\n                  ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n\n        {showAddPatientCard && ( <Col md=\"8\">\n            <Card className=\"card-user\"  id=\"add-patient-card\">\n              <CardHeader>\n                <CardTitle tag=\"h5\">Add patient</CardTitle>\n                \n              </CardHeader>\n              <CardBody>\n                <Form onSubmit={handleSubmit}>\n\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label>Full Name</label>\n                        <Input                         \n                          placeholder=\"Name\"\n                          type=\"text\"\n                          value={fullName}\n                          onChange={(e) => setFullName(e.target.value)}\n                          required \n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-1\" md=\"6\">\n                      <FormGroup>\n                        <label>Telephone</label>\n                        <Input                          \n                          placeholder=\"Telephone\"                       \n                          value={mobileNo}\n                          maxLength={10}\n                          onChange={(e) => setMobileNo(e.target.value)}                          \n                          required\n                          error={!isMobileNoValid}\n                          helperText={!isMobileNoValid && 'Mobile No should be 10 numeric characters'}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-1\" md=\"6\">\n                      <FormGroup>\n                        <label>NIC</label>\n                        <Input\n                          placeholder=\"NIC\"                          \n                          value={identityCardNo}\n                          onChange={(e) => setIdentityCardNo(e.target.value)}\n                          required \n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label>Address</label>\n                        <Input\n                         \n                          placeholder=\"Home Address\"\n                          type=\"text\"\n                          value={address}\n                          onChange={(e) => setAddress(e.target.value)}\n                          required\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Date of Birth</label>\n                        <Input\n                          defaultValue=\"Melbourne\"\n                          placeholder=\"Date of Birth\"\n                          type=\"date\"\n                          value={dob}\n                          required\n                          onChange={(e) => setDob(e.target.value)}                         \n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Gender</label>\n                        <Input   \n                        style={{height:33}}                       \n                          placeholder=\"Gender\"                          \n                          value={gender}\n                          type=\"select\" \n                          onChange={(e) => setGender(e.target.value)}\n                          >    <option value=\"\">Select Gender</option>\n                          <option value=\"male\">Male</option>\n                          <option value=\"female\">Female</option></Input>\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Email (if available)</label>\n                        <Input placeholder=\"Email\"\n                         type=\"email\"\n                         value={email || ''}\n                         onChange={handleEmailChange}\n                         error={email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)}\n                         helperText={ email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) && 'Invalid email format'} />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <div className=\"update ml-auto mr-auto\">\n                      <Button\n                        className=\"btn-round\"\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        Submit\n                      </Button>\n                    </div>\n                  </Row>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>)}\n\n         \n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default User;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder (9)\\\\Diabetic-Retinopathy-Detection-main\\\\Final Hosted Web\\\\DockerRepo-RP-main\\\\src\\\\views\\\\charts\\\\ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChartComponent = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (data.length === 0) return;\n    const ctx = chartRef.current.getContext('2d');\n\n    // Count occurrences of each \"type\" value\n    const counts = {};\n    data.forEach(item => {\n      const type = item.type;\n      counts[type] = (counts[type] || 0) + 1;\n    });\n    const typeLabels = Object.keys(counts);\n    const typeCounts = Object.values(counts);\n    const dataForChart = {\n      labels: typeLabels,\n      datasets: [{\n        data: typeCounts,\n        backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)']\n      }]\n    };\n    const myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: dataForChart\n    });\n    return () => {\n      // Cleanup chart when the component unmounts\n      myChart.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChartComponent, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PieChartComponent;\nexport default PieChartComponent;\nvar _c;\n$RefreshReg$(_c, \"PieChartComponent\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","PieChartComponent","data","_s","chartRef","length","ctx","current","getContext","counts","forEach","item","type","typeLabels","Object","keys","typeCounts","values","dataForChart","labels","datasets","backgroundColor","myChart","destroy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/New folder (9)/Diabetic-Retinopathy-Detection-main/Final Hosted Web/DockerRepo-RP-main/src/views/charts/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst PieChartComponent = ({ data }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (data.length === 0) return;\n\n    const ctx = chartRef.current.getContext('2d');\n    \n    // Count occurrences of each \"type\" value\n    const counts = {};\n    data.forEach(item => {\n      const type = item.type;\n      counts[type] = (counts[type] || 0) + 1;\n    });\n\n    const typeLabels = Object.keys(counts);\n    const typeCounts = Object.values(counts);\n\n    const dataForChart = {\n      labels: typeLabels,\n      datasets: [{\n        data: typeCounts,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n        ],\n      }],\n    };\n\n    const myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: dataForChart,\n    });\n\n    return () => {\n      // Cleanup chart when the component unmounts\n      myChart.destroy();\n    };\n  }, [data]);\n\n  return (\n    <div>\n      <canvas ref={chartRef} />\n    </div>\n  );\n};\n\nexport default PieChartComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAEvB,MAAMC,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjBP,IAAI,CAACQ,OAAO,CAACC,IAAI,IAAI;MACnB,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI;MACtBH,MAAM,CAACG,IAAI,CAAC,GAAG,CAACH,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC;IACtC,MAAMO,UAAU,GAAGF,MAAM,CAACG,MAAM,CAACR,MAAM,CAAC;IAExC,MAAMS,YAAY,GAAG;MACnBC,MAAM,EAAEN,UAAU;MAClBO,QAAQ,EAAE,CAAC;QACTlB,IAAI,EAAEc,UAAU;QAChBK,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB;MAE7B,CAAC;IACH,CAAC;IAED,MAAMC,OAAO,GAAG,IAAIxB,KAAK,CAACQ,GAAG,EAAE;MAC7BM,IAAI,EAAE,UAAU;MAChBV,IAAI,EAAEgB;IACR,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACAI,OAAO,CAACC,OAAO,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAACrB,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAQyB,GAAG,EAAErB;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA/CIF,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAiDvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
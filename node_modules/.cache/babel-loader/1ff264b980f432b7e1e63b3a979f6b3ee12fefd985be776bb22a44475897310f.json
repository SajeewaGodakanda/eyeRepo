{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder (9)\\\\Diabetic-Retinopathy-Detection-main\\\\Final Hosted Web\\\\DockerRepo-RP-main\\\\src\\\\views\\\\charts\\\\CombinationChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombinationChartComponent = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (data.length === 0) return;\n    const ctx = chartRef.current.getContext('2d');\n\n    // Count occurrences of each \"type\" and \"status\" value\n    const typeCounts = {\n      Glaucoma: 0,\n      Cataract: 0,\n      DME: 0,\n      DR: 0\n    };\n    const statusCounts = {\n      decline: [],\n      accept: [],\n      pending: []\n    };\n    data.forEach(item => {\n      const type = item.type;\n      const status = item.status;\n      typeCounts[type] = (typeCounts[type] || 0) + 1;\n      statusCounts[status].push(type);\n    });\n    const typeLabels = Object.keys(typeCounts);\n    const typeData = Object.values(typeCounts);\n    const statusLabels = Object.keys(statusCounts);\n    const dataForChart = {\n      labels: typeLabels,\n      datasets: [{\n        type: 'bar',\n        label: 'Type Count',\n        data: typeData,\n        backgroundColor: 'rgba(255, 99, 132, 0.7)',\n        yAxisID: 'y-axis-1'\n      }, {\n        type: 'line',\n        label: 'Decline Count',\n        data: statusCounts.decline,\n        borderColor: 'rgba(54, 162, 235, 0.7)',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        yAxisID: 'y-axis-2'\n      }, {\n        type: 'line',\n        label: 'Accept Count',\n        data: statusCounts.accept,\n        borderColor: 'rgba(255, 206, 86, 0.7)',\n        backgroundColor: 'rgba(255, 206, 86, 0.2)',\n        yAxisID: 'y-axis-2'\n      }, {\n        type: 'line',\n        label: 'Pending Count',\n        data: statusCounts.pending,\n        borderColor: 'rgba(75, 192, 192, 0.7)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        yAxisID: 'y-axis-2'\n      }]\n    };\n    const myChart = new Chart(ctx, {\n      type: 'bar',\n      data: dataForChart,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          y1: {\n            type: 'linear',\n            position: 'right',\n            beginAtZero: true\n          }\n        }\n      }\n    });\n    return () => {\n      // Cleanup chart when the component unmounts\n      myChart.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinationChartComponent, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = CombinationChartComponent;\nexport default CombinationChartComponent;\nvar _c;\n$RefreshReg$(_c, \"CombinationChartComponent\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CombinationChartComponent","data","_s","chartRef","length","ctx","current","getContext","typeCounts","Glaucoma","Cataract","DME","DR","statusCounts","decline","accept","pending","forEach","item","type","status","push","typeLabels","Object","keys","typeData","values","statusLabels","dataForChart","labels","datasets","label","backgroundColor","yAxisID","borderColor","myChart","options","scales","y","beginAtZero","y1","position","destroy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/New folder (9)/Diabetic-Retinopathy-Detection-main/Final Hosted Web/DockerRepo-RP-main/src/views/charts/CombinationChartComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst CombinationChartComponent = ({ data }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (data.length === 0) return;\n\n    const ctx = chartRef.current.getContext('2d');\n\n    // Count occurrences of each \"type\" and \"status\" value\n    const typeCounts = {\n      Glaucoma: 0,\n      Cataract: 0,\n      DME: 0,\n      DR: 0,\n    };\n\n    const statusCounts = {\n      decline: [],\n      accept: [],\n      pending: [],\n    };\n\n    data.forEach(item => {\n      const type = item.type;\n      const status = item.status;\n      typeCounts[type] = (typeCounts[type] || 0) + 1;\n      statusCounts[status].push(type);\n    });\n\n    const typeLabels = Object.keys(typeCounts);\n    const typeData = Object.values(typeCounts);\n    const statusLabels = Object.keys(statusCounts);\n\n    const dataForChart = {\n      labels: typeLabels,\n      datasets: [\n        {\n          type: 'bar',\n          label: 'Type Count',\n          data: typeData,\n          backgroundColor: 'rgba(255, 99, 132, 0.7)',\n          yAxisID: 'y-axis-1',\n        },\n        {\n          type: 'line',\n          label: 'Decline Count',\n          data: statusCounts.decline,\n          borderColor: 'rgba(54, 162, 235, 0.7)',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          yAxisID: 'y-axis-2',\n        },\n        {\n          type: 'line',\n          label: 'Accept Count',\n          data: statusCounts.accept,\n          borderColor: 'rgba(255, 206, 86, 0.7)',\n          backgroundColor: 'rgba(255, 206, 86, 0.2)',\n          yAxisID: 'y-axis-2',\n        },\n        {\n          type: 'line',\n          label: 'Pending Count',\n          data: statusCounts.pending,\n          borderColor: 'rgba(75, 192, 192, 0.7)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          yAxisID: 'y-axis-2',\n        },\n      ],\n    };\n\n    const myChart = new Chart(ctx, {\n      type: 'bar',\n      data: dataForChart,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n          y1: {\n            type: 'linear',\n            position: 'right',\n            beginAtZero: true,\n          },\n        },\n      },\n    });\n\n    return () => {\n      // Cleanup chart when the component unmounts\n      myChart.destroy();\n    };\n  }, [data]);\n\n  return (\n    <div>\n      <canvas ref={chartRef} />\n    </div>\n  );\n};\n\nexport default CombinationChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
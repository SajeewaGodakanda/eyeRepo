{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder (9)\\\\Diabetic-Retinopathy-Detection-main\\\\Final Hosted Web\\\\DockerRepo-RP-main\\\\src\\\\views\\\\charts\\\\DoctorDiagnosisPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDiagnosisPieChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (data.length === 0) return;\n    const ctx = chartRef.current.getContext('2d');\n\n    // Count occurrences of each \"doctorDiagnosis\" value\n    const diagnosisCounts = {\n      'Cataract Positive': 0,\n      'Cataract Negative': 0,\n      'Glaucoma Positive': 0,\n      'Glaucoma Negative': 0,\n      'Diabetes Retinopathy Positive': 0,\n      'Diabetes Retinopathy Negative': 0,\n      'DME-POSITIVE': 0,\n      'DME-NEGATIVE': 0\n    };\n    data.forEach(item => {\n      const diagnosis = item.results.top;\n      //   console.log(item.results.top);\n      diagnosisCounts[diagnosis] = (diagnosisCounts[diagnosis] || 0) + 1;\n    });\n    const diagnosisLabels = Object.keys(diagnosisCounts);\n    const diagnosisData = Object.values(diagnosisCounts);\n    const dataForChart = {\n      labels: diagnosisLabels,\n      datasets: [{\n        data: diagnosisData,\n        backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)', 'rgba(100, 200, 86, 0.7)', 'rgba(50, 150, 250, 0.7)'\n        // Add more colors as needed\n        ]\n      }]\n    };\n    const myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: dataForChart,\n      options: {\n        plugins: {\n          legend: {\n            position: 'bottom',\n            align: 'start' // You can change this to 'top', 'bottom', 'left', 'right', or any other desired position.\n          }\n        }\n      }\n    });\n    return () => {\n      // Cleanup chart when the component unmounts\n      myChart.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorDiagnosisPieChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = DoctorDiagnosisPieChart;\nexport default DoctorDiagnosisPieChart;\nvar _c;\n$RefreshReg$(_c, \"DoctorDiagnosisPieChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","DoctorDiagnosisPieChart","data","_s","chartRef","length","ctx","current","getContext","diagnosisCounts","forEach","item","diagnosis","results","top","diagnosisLabels","Object","keys","diagnosisData","values","dataForChart","labels","datasets","backgroundColor","myChart","type","options","plugins","legend","position","align","destroy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/New folder (9)/Diabetic-Retinopathy-Detection-main/Final Hosted Web/DockerRepo-RP-main/src/views/charts/DoctorDiagnosisPieChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst DoctorDiagnosisPieChart = ({ data }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (data.length === 0) return;\n\n    const ctx = chartRef.current.getContext('2d');\n\n    // Count occurrences of each \"doctorDiagnosis\" value\n    const diagnosisCounts = {\n      'Cataract Positive': 0,\n      'Cataract Negative': 0,\n      'Glaucoma Positive': 0,\n      'Glaucoma Negative': 0,\n      'Diabetes Retinopathy Positive': 0,\n      'Diabetes Retinopathy Negative': 0,\n      'DME-POSITIVE': 0,\n      'DME-NEGATIVE': 0,\n    };\n\n    data.forEach(item => {\n      const diagnosis = item.results.top;\n    //   console.log(item.results.top);\n      diagnosisCounts[diagnosis] = (diagnosisCounts[diagnosis] || 0) + 1;\n    });\n    \n\n    const diagnosisLabels = Object.keys(diagnosisCounts);\n    const diagnosisData = Object.values(diagnosisCounts);\n\n    const dataForChart = {\n      labels: diagnosisLabels,\n      datasets: [{\n        data: diagnosisData,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n          'rgba(153, 102, 255, 0.7)',\n          'rgba(255, 159, 64, 0.7)',\n          'rgba(100, 200, 86, 0.7)',\n          'rgba(50, 150, 250, 0.7)',\n          // Add more colors as needed\n        ],\n      }],\n    };\n\n    const myChart = new Chart(ctx, {\n        type: 'doughnut',\n      data: dataForChart,\n      options: {\n        plugins: {\n          legend: {\n            position: 'bottom',\n        align: 'start',  // You can change this to 'top', 'bottom', 'left', 'right', or any other desired position.\n          },\n        },\n      },\n    });\n\n    return () => {\n      // Cleanup chart when the component unmounts\n      myChart.destroy();\n    };\n  }, [data]);\n\n  return (\n    <div>\n      <canvas ref={chartRef} />\n    </div>\n  );\n};\n\nexport default DoctorDiagnosisPieChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAEvB,MAAMC,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,MAAMC,eAAe,GAAG;MACtB,mBAAmB,EAAE,CAAC;MACtB,mBAAmB,EAAE,CAAC;MACtB,mBAAmB,EAAE,CAAC;MACtB,mBAAmB,EAAE,CAAC;MACtB,+BAA+B,EAAE,CAAC;MAClC,+BAA+B,EAAE,CAAC;MAClC,cAAc,EAAE,CAAC;MACjB,cAAc,EAAE;IAClB,CAAC;IAEDP,IAAI,CAACQ,OAAO,CAACC,IAAI,IAAI;MACnB,MAAMC,SAAS,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG;MACpC;MACEL,eAAe,CAACG,SAAS,CAAC,GAAG,CAACH,eAAe,CAACG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IACpE,CAAC,CAAC;IAGF,MAAMG,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACR,eAAe,CAAC;IACpD,MAAMS,aAAa,GAAGF,MAAM,CAACG,MAAM,CAACV,eAAe,CAAC;IAEpD,MAAMW,YAAY,GAAG;MACnBC,MAAM,EAAEN,eAAe;MACvBO,QAAQ,EAAE,CAAC;QACTpB,IAAI,EAAEgB,aAAa;QACnBK,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,yBAAyB,EACzB;QACA;QAAA;MAEJ,CAAC;IACH,CAAC;IAED,MAAMC,OAAO,GAAG,IAAI1B,KAAK,CAACQ,GAAG,EAAE;MAC3BmB,IAAI,EAAE,UAAU;MAClBvB,IAAI,EAAEkB,YAAY;MAClBM,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE,QAAQ;YACtBC,KAAK,EAAE,OAAO,CAAG;UACf;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACAN,OAAO,CAACO,OAAO,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAAC7B,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAAgC,QAAA,eACEhC,OAAA;MAAQiC,GAAG,EAAE7B;IAAS;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAAClC,EAAA,CAxEIF,uBAAuB;AAAAqC,EAAA,GAAvBrC,uBAAuB;AA0E7B,eAAeA,uBAAuB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}